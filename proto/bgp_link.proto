// Copyright (c) 2024 Arista Networks, Inc.  All rights reserved.
// Arista Networks, Inc. Confidential and Proprietary.

syntax = "proto3";

option go_package = "arista/EosSdkRpc";

package eos.remote;

import "rpc_types.proto";
import "intf_types.proto";


/**
* Update the link weight to be used in the BGP control plane for outbound link-bandwidth
* advertisements if the interface is used as the directly connected peering interface.
*/
service BgpLinkWeightMgrService {
   /**
   * Get the link weights for one or multiple interfaces.
   */
   rpc link_weights( BgpLinkWeightsRequest) returns ( stream BgpLinkWeightsResponse );

   /**
   * Set the link weight for multiple interfaces.
   */
   rpc bulk_link_weight_set( BulkBgpLinkWeightSetRequest ) returns ( BulkBgpLinkWeightSetResponse ) {}

   /**
   * Delete the link weight for multiple interfaces.
   */
   rpc bulk_link_weight_del( BulkBgpLinkWeightDelRequest ) returns ( BulkBgpLinkWeightDelResponse ) {}

   /**
   * Starts the link weight resync process, to set the link weights to a known state.
   * The resync_complete rpc, must be called to end the resync.
   * To remove the link weight for all interfaces use with no operations in between:
   * link_weight_resync_init()
   * link_weight_resync_complete()
   **/
   rpc link_weight_resync_init( BgpLinkWeightResyncInitRequest ) returns ( BgpLinkWeightResyncInitResponse ) {}

   /**
   * Ends the current link weight resync process.
   * All link weights not added or modified during the resync will be deleted.
   **/
   rpc link_weight_resync_complete( BgpLinkWeightResyncCompleteRequest ) returns ( BgpLinkWeightResyncCompleteResponse ) {}
}

message BgpLinkWeightsRequest {
   // Optional regex to filter out interfaces.
   // If blank, no filters will be applied.
   string intf_id_regex = 1;
}

message BgpLinkWeightsResponse {
   // Name of the interface.
   IntfId intf_id = 1;
   // Link weight associated with the interface, 0 < link_weight < 2^24.
   uint32 link_weight = 2;
}

message BgpLinkWeightSetRequest {
   // Name of the interface.
   IntfId intf_id = 1;
   // Link weight associated with the interface, 0 < link_weight < 2^24.
   uint32 link_weight = 2;
}

message BulkBgpLinkWeightSetRequest {
   // List of BgpLinkWeightSetRequests.
   repeated BgpLinkWeightSetRequest requests = 1;
}

message BulkBgpLinkWeightSetResponse {
   // Number of successful requests processed.
   uint64 processed = 1;
   // Error details, if any.
   RpcResponseStatus status = 2;
}

message BgpLinkWeightDelRequest {
   // Name of the interface.
   IntfId intf_id = 1;
}

message BulkBgpLinkWeightDelRequest {
   // List of BgpLinkWeightDelRequests.
   repeated BgpLinkWeightDelRequest requests = 1;
}

message BulkBgpLinkWeightDelResponse {
   // Number of successful requests processed.
   uint64 processed = 1;
   // Error details, if any.
   RpcResponseStatus status = 2;
}

message BgpLinkWeightResyncInitRequest {}

message BgpLinkWeightResyncInitResponse {}

message BgpLinkWeightResyncCompleteRequest {}

message BgpLinkWeightResyncCompleteResponse {}
