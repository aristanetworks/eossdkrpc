// Copyright (c) 2021 Arista Networks, Inc.  All rights reserved.
// Arista Networks, Inc. Confidential and Proprietary.

syntax = "proto3";

package eos.remote;

import "defs.proto";
import "intf_types.proto";
import "ip_intf_types.proto";

service IpIntfMgrService {
   rpc watch( IpIntfWatchRequest ) returns ( stream IpIntfEvent ) {}

   rpc exists( IpIntfExistsRequest ) returns ( IpIntfExistsResponse ) {}

   rpc ip_addrs( IpIntfAddrsRequest ) returns ( IpIntfAddrsResponse ) {}

   rpc ip_addrs_is( IpIntfAddrsIsRequest ) returns ( IpIntfAddrsIsResponse ) {}

   rpc bulk_ip_addrs_is( IpIntfBulkAddrsIsRequest ) returns ( IpIntfBulkAddrsIsResponse ) {}

   rpc ip_addr_modify( IpIntfAddrModifyRequest ) returns ( IpIntfAddrModifyResponse ) {}

   rpc bulk_ip_addr_modify( IpIntfBulkAddrModifyRequest ) returns ( IpIntfBulkAddrModifyResponse ) {}
   
   rpc ip_addr_merge_mode( IpIntfAddrMergeModeRequest ) returns ( IpIntfAddrMergeModeResponse ) {}

   rpc ip_addr_merge_mode_is( IpIntfAddrMergeModeIsRequest ) returns ( IpIntfAddrMergeModeIsResponse ) {}

   rpc bulk_ip_addr_merge_mode_is( IpIntfBulkAddrMergeModeIsRequest ) returns ( IpIntfBulkAddrMergeModeIsResponse ) {}

   rpc internal_vlan_id( IpIntfInternalVlanIdRequest ) returns ( IpIntfInternalVlanIdResponse ) {}
}

message IpIntfWatchRequest {
   oneof overloads {
      bool all_intfs = 1;
      IntfId intf_id = 2;
   }
}

message IpIntfEvent {
   IntfId intf_id = 1;
   oneof ip_intf_event {
      IpAddrEvent addr = 2;
      VlanId vlan_id = 3;
   }
} 

message IpIntfExistsRequest {
   IntfId intf_id = 1;
}

message IpIntfExistsResponse {
   bool exists = 1;
}

message IpIntfAddrsRequest {
   IntfId intf_id = 1;
}

message IpIntfAddrsResponse {
   repeated IpAddrMask addrs = 1;
}

message IpIntfAddrsIsRequest {
   IntfId intf_id = 1;
   repeated IpAddrMask ip_addr_mask = 2;
}

message IpIntfAddrsIsResponse {}

message IpIntfBulkAddrsIsRequest {
   repeated IpIntfAddrsIsRequest requests = 1;
}

message IpIntfBulkAddrsIsResponse {
   repeated RpcResponseStatus responses = 1;
}

message IpIntfAddrModifyRequest {
   IpAddrOperations operation = 1;
   IntfId intf_id = 2;
   IpAddrMask ip_addr_mask = 3;
}

message IpIntfAddrModifyResponse {}

message IpIntfBulkAddrModifyRequest {
   repeated IpIntfAddrModifyRequest requests = 1;
}

message IpIntfBulkAddrModifyResponse {
   repeated RpcResponseStatus responses = 1;
}

message IpIntfAddrMergeModeRequest {
   IntfId intf_id = 1;
}

message IpIntfAddrMergeModeResponse {
   bool merge_mode = 1;
}

message IpIntfAddrMergeModeIsRequest {
   IntfId intf_id = 1;
   bool merge_mode = 2;
}

message IpIntfAddrMergeModeIsResponse {}

message IpIntfBulkAddrMergeModeIsRequest {
   repeated IpIntfAddrMergeModeIsRequest requests = 1;
}

message IpIntfBulkAddrMergeModeIsResponse {
   repeated RpcResponseStatus responses = 1;
}

message IpIntfInternalVlanIdRequest {
   IntfId intf_id = 1;
}

message IpIntfInternalVlanIdResponse {
   VlanId vlan_id = 1;
}
