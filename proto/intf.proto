// Copyright (c) 2021 Arista Networks, Inc.  All rights reserved.
// Arista Networks, Inc. Confidential and Proprietary.

syntax = "proto3";

package eos.remote;

import "rpc_types.proto";
import "intf_types.proto";

service IntfMgrService {
   rpc watch( WatchIntfRequest ) returns ( stream WatchIntfResponse ) {}
   rpc intfs( IntfsRequest ) returns ( stream IntfsResponse ) {}
   rpc exists( IntfExistsRequest ) returns ( IntfExistsResponse ) {}
   rpc kernel_intf_name( KernelIntfNameRequest ) returns ( KernelIntfNameResponse ) {}
   rpc eos_intf_name( EosIntfNameRequest ) returns ( EosIntfNameResponse ) {}
   rpc admin_enabled( AdminEnabledRequest ) returns ( AdminEnabledResponse ) {}
   rpc admin_enabled_is( AdminEnabledIsRequest ) returns ( AdminEnabledIsResponse ) {}
   rpc bulk_admin_enabled_is( BulkAdminEnabledIsRequest ) returns ( BulkAdminEnabledIsResponse ) {}
   rpc description( DescriptionRequest ) returns ( DescriptionResponse ) {}
   rpc description_is( DescriptionIsRequest ) returns ( DescriptionIsResponse ) {}
   rpc bulk_description_is( BulkDescriptionIsRequest ) returns ( BulkDescriptionIsResponse ) {}
   rpc oper_status( OperStatusRequest ) returns ( OperStatusResponse ) {}
} 

message WatchIntfRequest {
   oneof overloads {
      bool all_intfs = 1;
      IntfId intf_id = 2;
   }
}

message WatchIntfResponse {
   enum IntfEvents {
      INTF_CREATE = 0;
      INTF_DEL = 1;
   }
   IntfId intf_id = 1;
   oneof intf_event {
      IntfEvents event = 2;
      OperStatuses status = 3;
      bool admin_enabled = 4;
      string description = 5;
   }
}

message IntfsRequest {}

message IntfsResponse {
   IntfId intf_id = 1; 
}

message IntfExistsRequest {
   IntfId intf_id = 1; 
}

message IntfExistsResponse {
   bool exists = 1; 
}

message KernelIntfNameRequest {
   IntfId intf_id = 1; 
}

message KernelIntfNameResponse {
   string name = 1; 
}

message EosIntfNameRequest {
   string name = 1; 
}

message EosIntfNameResponse {
   IntfId intf_id = 1; 
}

message AdminEnabledRequest {
   IntfId intf_id = 1; 
}

message AdminEnabledResponse {
   bool enabled = 1; 
}

message AdminEnabledIsRequest {
   IntfId intf_id = 1;
   bool enabled = 2;
}

message AdminEnabledIsResponse {}

message BulkAdminEnabledIsRequest {
   repeated AdminEnabledIsRequest requests = 1; 
}

message BulkAdminEnabledIsResponse {
   uint64 processed = 1;
   RpcResponseStatus status = 2;
}

message DescriptionRequest {
   IntfId intf_id = 1; 
}

message DescriptionResponse {
   string description = 1; 
}

message DescriptionIsRequest {
   IntfId intf_id = 1;
   string description = 2;
}

message DescriptionIsResponse {}

message BulkDescriptionIsRequest {
   repeated DescriptionIsRequest requests = 1; 
}

message BulkDescriptionIsResponse {
   uint64 processed = 1;
   RpcResponseStatus status = 2;
}

message OperStatusRequest {
   IntfId intf_id = 1; 
}

message OperStatusResponse {
   OperStatuses status = 1; 
}

service IntfCounterMgrService {
   rpc intf_counters( IntfCountersRequest ) returns ( IntfCountersResponse ) {}
   rpc intf_traffic_counters( IntfTrafficCountersRequest ) returns ( IntfTrafficCountersResponse ) {}
}

message IntfCountersRequest {
   IntfId intf_id = 1; 
}

message IntfCountersResponse {
   IntfCounters counters = 1; 
}

message IntfTrafficCountersRequest {
   IntfId intf_id = 1; 
}

message IntfTrafficCountersResponse {
   IntfTrafficRates rates = 1; 
}
