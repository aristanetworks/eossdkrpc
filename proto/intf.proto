syntax = "proto3";

import "defs.proto";

package eos.remote;

service IntfMgrService {
   rpc watch( WatchIntfParams ) returns ( stream InterfaceEvent ) {}

   rpc intfs( Void ) returns ( stream IntfId ) {}
   
   rpc exists( IntfId ) returns ( Bool ) {}

   rpc kernel_intf_name( IntfId ) returns ( String ) {}

   rpc eos_intf_name( String ) returns ( IntfId ) {}

   rpc admin_enabled( IntfId ) returns ( Bool ) {}

   rpc admin_enabled_is( AdminEnabledParams ) returns ( RpcResponseStatus ) {}

   rpc bulk_admin_enabled_is( BulkAdminEnabledParams ) returns ( BulkResponse ) {}

   rpc description( IntfId ) returns ( String ) {}

   rpc description_is( DescriptionParams ) returns ( RpcResponseStatus ) {}

   rpc bulk_description_is( BulkDescriptionParams ) returns ( BulkResponse ) {}

   rpc oper_status( IntfId ) returns ( OperStatus ) {}
}

service IntfCounterMgrService {
   rpc intf_counters( IntfId ) returns( IntfCounters ) {}

   rpc intf_traffic_counters( IntfId ) returns( IntfTrafficRates ) {}
}

message IntfCounters {
   uint64 out_ucast_pkts = 1;
   uint64 out_multicast_pkts = 2;
   uint64 out_broadcast_pkts = 3;
   uint64 in_ucast_pkts = 4;
   uint64 in_multicast_pkts = 5;
   uint64 in_broadcast_pkts = 6;
   uint64 out_octets = 7;
   uint64 in_octets = 8;
   uint64 out_discards = 9;
   uint64 out_errors = 10;
   uint64 in_discards = 11;
   uint64 in_errors = 12;
   double sample_time = 13; 
}

message IntfTrafficRates {
   double out_pkts_rate = 1;
   double in_pkts_rate = 2;
   double out_bits_rate = 3;
   double in_bits_rate = 4;
   double sample_time = 5;
}

message WatchIntfParams {
   oneof overloads {
      bool all_intfs = 1;
      IntfId intf_id = 2;
   }
}

message InterfaceEvent {
   enum IntfEvents {
      INTF_CREATE = 0;
      INTF_DEL = 1;
   }
   IntfId intf_id = 1;
   oneof intf_event {
      IntfEvents event = 2;
      OperStatus status = 3;
      bool admin_enabled = 4;
      string description = 5;
   }
}

enum InterfaceTypes{
   INTF_TYPE_NULL = 0;
   INTF_TYPE_OTHER = 1;
   INTF_TYPE_ETH = 2;
   INTF_TYPE_VLAN = 3;
   INTF_TYPE_MANAGEMENT = 4;
   INTF_TYPE_LOOPBACK = 5;
   INTF_TYPE_LAG = 6;
   INTF_TYPE_NULL0 = 7;
   INTF_TYPE_CPU = 8;
   INTF_TYPE_VXLAN = 9;
}

message IntfId{
  InterfaceTypes type = 1;
  uint64 id = 2;
}

message AdminEnabledParams {
   IntfId intf_id = 1;
   bool enabled = 2;
}

message BulkAdminEnabledParams {
   repeated AdminEnabledParams admin_intfs = 1;
}

message DescriptionParams {
   IntfId intf_id = 1;
   string description = 2;
}

message BulkDescriptionParams {
   repeated DescriptionParams intf_descriptions = 1;
}

message OperStatus {
   enum OperStatuses {
      INTF_OPER_NULL = 0;
      INTF_OPER_UP = 1;
      INTF_OPER_DOWN = 2;
   }
   OperStatuses status = 1;
}
