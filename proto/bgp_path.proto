// Copyright (c) 2021 Arista Networks, Inc.  All rights reserved.
// Arista Networks, Inc. Confidential and Proprietary.

syntax = "proto3";

package eos.remote;

import "bgp_path_types.proto";
import "rpc_types.proto";

service BgpPathMgrService {
   rpc watch( WatchBgpPathRequest ) returns ( stream WatchBgpPathResponse ) {}
   rpc ipv4_unicast_paths( Ipv4UnicastPathsRequest ) returns ( stream Ipv4UnicastPathsResponse ) {}
   rpc ipv4_unicast_path( Ipv4UnicastPathRequest ) returns ( Ipv4UnicastPathResponse ) {}
   rpc ipv4_unicast_bgp_convergence( Ipv4UnicastBgpConvergenceRequest ) returns ( Ipv4UnicastBgpConvergenceResponse ) {}
   rpc ipv6_unicast_paths( Ipv6UnicastPathsRequest ) returns ( stream Ipv6UnicastPathsResponse ) {}
   rpc ipv6_unicast_path( Ipv6UnicastPathRequest ) returns ( Ipv6UnicastPathResponse ) {}
   rpc ipv6_unicast_bgp_convergence( Ipv6UnicastBgpConvergenceRequest ) returns ( Ipv6UnicastBgpConvergenceResponse ) {}
}

message WatchBgpPathRequest {
   oneof overloads {
      bool all_paths = 1;
      bool ipv4_unicast_paths = 2;
      bool ipv6_unicast_paths = 3;
   }
}

message BgpUnicastPathEvent {
   int32 ip_version = 1;
   BgpPathKey path_key = 2;
}

message ConvergedEvent {
   int32 ip_version = 1;
   bool converged = 2;
}

message WatchBgpPathResponse {
   oneof events {
      BgpUnicastPathEvent path_event = 1;
      ConvergedEvent converged_event = 2;
   }
}

message Ipv4UnicastPathsRequest {
   BgpPathKey path_key = 1;
   BgpPathOptions path_options = 2;
}

message Ipv4UnicastPathsResponse {
   BgpPath response = 1; 
}

message Ipv4UnicastPathRequest {
   BgpPathKey path_key = 1;
   BgpPathOptions path_options = 2;
}

message Ipv4UnicastPathResponse {
   BgpPath response = 1; 
}

message Ipv4UnicastBgpConvergenceRequest {}

message Ipv4UnicastBgpConvergenceResponse {
   bool response = 1; 
}

message Ipv6UnicastPathsRequest {
   BgpPathKey path_key = 1;
   BgpPathOptions path_options = 2;
}

message Ipv6UnicastPathsResponse {
   BgpPath response = 1; 
}

message Ipv6UnicastPathRequest {
   BgpPathKey path_key = 1;
   BgpPathOptions path_options = 2;
}

message Ipv6UnicastPathResponse {
   BgpPath response = 1; 
}

message Ipv6UnicastBgpConvergenceRequest {}

message Ipv6UnicastBgpConvergenceResponse {
   bool response = 1; 
}
