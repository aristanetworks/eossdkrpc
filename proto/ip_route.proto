// Copyright (c) 2021 Arista Networks, Inc.  All rights reserved.
// Arista Networks, Inc. Confidential and Proprietary.

syntax = "proto3";

import "rpc_types.proto";
import "intf_types.proto";
import "ip_route_types.proto";

package eos.remote;

service IpRouteMgrService {
   rpc tag( TagRequest ) returns ( TagResponse ) {}
   rpc tag_is( TagIsRequest ) returns ( TagIsResponse ) {}
   rpc resync_init( ResyncInitRequest ) returns ( ResyncInitResponse ) {}
   rpc resync_complete( ResyncCompleteRequest ) returns ( ResyncCompleteResponse ) {}
   rpc ip_routes( IpRoutesRequest ) returns ( stream IpRoutesResponse ) {}
   rpc ip_route_vias( IpRouteViasRequest ) returns ( stream IpRouteViasResponse ) {}
   rpc ip_route_exists( IpRouteExistsRequest ) returns ( IpRouteExistsResponse ) {}
   rpc ip_route_via_exists( IpRouteViaExistsRequest ) returns ( IpRouteViaExistsResponse ) {}
   rpc ip_route( IpRouteRequest ) returns ( IpRouteResponse ) {}
   rpc ip_route_set( IpRouteSetRequest ) returns ( IpRouteSetResponse ) {}
   rpc bulk_ip_route_set( BulkIpRouteSetRequest ) returns ( BulkIpRouteSetResponse ) {}
   rpc ip_route_del( IpRouteDelRequest ) returns ( IpRouteDelResponse ) {}
   rpc bulk_ip_route_del( BulkIpRouteDelRequest ) returns ( BulkIpRouteDelResponse ) {}
   rpc ip_route_via_set( IpRouteViaSetRequest ) returns ( IpRouteViaSetResponse ) {}
   rpc bulk_ip_route_via_set( BulkIpRouteViaSetRequest ) returns ( BulkIpRouteViaSetResponse ) {}
   rpc ip_route_via_del( IpRouteViaDelRequest ) returns ( IpRouteViaDelResponse ) {}
   rpc bulk_ip_route_via_del( BulkIpRouteViaDelRequest ) returns ( BulkIpRouteViaDelResponse ) {}

}

message IpRouteSetParams {
   IpRoute route = 1;
   oneof additional_arg {
      IpRouteActions action = 2;
      string vrf_name = 3;
   }
}

message BulkIpRouteSetParams {
   repeated IpRouteSetParams ip_routes = 1;
}

message IpRouteViaParams {
   IpRouteVia via = 1;
   string vrf_name = 2;
}

message BulkIpRouteViaParams {
   repeated IpRouteViaParams ip_route_vias = 1;
}

message IpRouteParams {
   IpRouteKey key = 1;
   string vrf_name = 2;
}

message BulkIpRouteParams {
   repeated IpRouteParams ip_routes = 1;
}

message TagRequest {}

message TagResponse {
   Uint32 response = 1; 
}

message TagIsRequest {
   Uint32 request = 1; 
}

message TagIsResponse {}

message ResyncInitRequest {}

message ResyncInitResponse {}

message ResyncCompleteRequest {}

message ResyncCompleteResponse {}

message IpRoutesRequest {}

message IpRoutesResponse {
   IpRoute response = 1; 
}

message IpRouteViasRequest {
   IpRouteVia via = 1;
   string vrf_name = 2;
}

message IpRouteViasResponse {
   IpRouteVia response = 1; 
}

message IpRouteExistsRequest {
   IpRouteKey key = 1;
   string vrf_name = 2;
}

message IpRouteExistsResponse {
   Bool response = 1; 
}

message IpRouteViaExistsRequest {
   IpRouteVia via = 1;
   string vrf_name = 2;
}

message IpRouteViaExistsResponse {
   Bool response = 1; 
}

message IpRouteRequest {
   IpRouteKey key = 1;
   string vrf_name = 2;
}

message IpRouteResponse {
   IpRoute response = 1; 
}

message IpRouteSetRequest {
   IpRouteSetParams request = 1; 
}

message IpRouteSetResponse {
   Void response = 1; 
}

message BulkIpRouteSetRequest {
   BulkIpRouteSetParams request = 1; 
}

message BulkIpRouteSetResponse {
   uint64 processed = 1;
   RpcResponseStatus status = 2;
}

message IpRouteDelRequest {
   IpRouteKey key = 1;
   string vrf_name = 2;
}

message IpRouteDelResponse {
   Void response = 1; 
}

message BulkIpRouteDelRequest {
   repeated IpRouteDelRequest request = 1; 
}

message BulkIpRouteDelResponse {
   uint64 processed = 1;
   RpcResponseStatus status = 2;
}

message IpRouteViaSetRequest {
   IpRouteVia via = 1;
   string vrf_name = 2;
}

message IpRouteViaSetResponse {
   Void response = 1; 
}

message BulkIpRouteViaSetRequest {
   BulkIpRouteViaSetRequest requests = 1; 
}

message BulkIpRouteViaSetResponse {
   uint64 processed = 1;
   RpcResponseStatus status = 2;
}

message IpRouteViaDelRequest {
   IpRouteVia via = 1;
   string vrf_name = 2;
}

message IpRouteViaDelResponse {
   Void response = 1; 
}

message BulkIpRouteViaDelRequest {
   BulkIpRouteViaDelRequest requests = 1; 
}

message BulkIpRouteViaDelResponse {
   uint64 processed = 1;
   RpcResponseStatus status = 2;
}